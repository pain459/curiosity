version: "3.8"
services:
  app:
    build:
      context: .
    container_name: flask_app
    ports:
      - "5000:5000"
    networks:
      - sre_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  db:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: sre_demo
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - sre_network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - sre_network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - sre_network

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    volumes:
      - ./config/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9093:9093"
    networks:
      - sre_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    networks:
      - sre_network

  logstash:
    image: docker.elastic.co/logstash/logstash:8.10.0
    container_name: logstash
    volumes:
      - ./config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5044:5044"
    networks:
      - sre_network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.0-1
    container_name: kibana
    ports:
      - "5601:5601"
    networks:
      - sre_network

  nginx:
    image: nginx:alpine
    container_name: nginx_reverse_proxy
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    networks:
      - sre_network

volumes:
  db_data:

networks:
  sre_network:
